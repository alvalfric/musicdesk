<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<servlet>
		<description></description>
		<display-name>SearchController</display-name>
		<servlet-name>SearchController</servlet-name>
		<servlet-class>aiss.controller.SearchController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SearchController</servlet-name>
		<url-pattern>/lyrics</url-pattern>
	</servlet-mapping>

	<servlet>
		<description></description>
		<display-name>video</display-name>
		<servlet-name>VideoController</servlet-name>
		<servlet-class>aiss.controller.VideoController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>VideoController</servlet-name>
		<url-pattern>/video</url-pattern>
	</servlet-mapping>
	<servlet>
		<description></description>
		<display-name>playlist</display-name>
		<servlet-name>PlaylistController</servlet-name>
		<servlet-class>aiss.controller.PlaylistController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PlaylistController</servlet-name>
		<url-pattern>/playlist</url-pattern>
	</servlet-mapping>

	<!-- Welcome page -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Error page -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/error.jsp</location>
	</error-page>

	<!-- WEBAPP SERVLETS -->
	<!-- Google Drive files - retrieve -->
	<!-- Spotify playlists - retrieve -->
	<servlet>
		<servlet-name>SpotifyPlaylistsGetController</servlet-name>
		<servlet-class>aiss.controller.SpotifyPlaylistsGetController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpotifyPlaylistsGetController</servlet-name>
		<url-pattern>/spotifyPlaylistsGet</url-pattern>
	</servlet-mapping>
	<!-- Spotify playlist - create -->
	<servlet>
		<servlet-name>SpotifyPlaylistNewController</servlet-name>
		<servlet-class>aiss.controller.SpotifyPlaylistNewController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpotifyPlaylistNewController</servlet-name>
		<url-pattern>/spotifyPlaylistNew</url-pattern>
	</servlet-mapping>
	<!-- OAUTH SERVLETS For each OAuth 2.0 service, you need to create two servlets: 
		one for the initiation and another for the callback. After sucess the token 
		for the provider will be available in the session scope under the name <provider>-token. 
		E.g.: Spotify-token. Those servlets support 2 parameters: - provider: which 
		is mandatory and specifies the configuration from the OAuthConfig.json file 
		which will be applied. - onSuccess: which is optional specifies the behaviour 
		of the servlet after an successful authorization. If you specify close as 
		the value of the parameter, the page will close. If you specify redirect:XXXX, 
		the page will be redirected to XXXX. WARNING: The url-patterns of all the 
		servlets mus be disjoint. Our recommendation is that if you expecify X as 
		the provider, the url-pattern of the initiation servlet could be /AuthController/X, 
		and the url-pattern of the callback servlet must be /oauth2callback/X. -->

	<!-- Spotify oAuth2 servlets -->
	<!-- SpotifyAuthController -->
	<servlet>
		<description />
		<servlet-name>SpotifyAuthController</servlet-name>
		<servlet-class>aiss.controller.oauth.GenericAuthController</servlet-class>
		<init-param>
			<param-name>provider</param-name>
			<param-value>Spotify</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpotifyAuthController</servlet-name>
		<url-pattern>/AuthController/Spotify</url-pattern>
	</servlet-mapping>
	<!--SpotifyOAuth2Callback -->
	<servlet>
		<description />
		<servlet-name>SpotifyOAuth2Callback</servlet-name>
		<servlet-class>aiss.controller.oauth.OAuth2Callback</servlet-class>
		<init-param>
			<param-name>provider</param-name>
			<param-value>Spotify</param-value>
		</init-param>
		<init-param>
			<param-name>onSuccess</param-name>
			<param-value>redirect:/lyrics</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpotifyOAuth2Callback</servlet-name>
		<url-pattern>/oauth2callback/Spotify</url-pattern>
	</servlet-mapping>
		<!-- Spotify oAuth2 servlets -->
	<!-- YoutubeAuthController -->
	<servlet>
		<description />
		<servlet-name>YoutubeAuthController</servlet-name>
		<servlet-class>aiss.controller.oauth.GenericAuthController</servlet-class>
		<init-param>
			<param-name>provider</param-name>
			<param-value>Youtube</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>YoutubeAuthController</servlet-name>
		<url-pattern>/AuthController/Youtube</url-pattern>
	</servlet-mapping>
	<!--YoutubeOAuth2Callback -->
	<servlet>
		<description />
		<servlet-name>YoutubeOAuth2Callback</servlet-name>
		<servlet-class>aiss.controller.oauth.OAuth2Callback</servlet-class>
		<init-param>
			<param-name>provider</param-name>
			<param-value>Youtube</param-value>
		</init-param>
		<init-param>
			<param-name>onSuccess</param-name>
			<param-value>redirect:/video</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>YoutubeOAuth2Callback</servlet-name>
		<url-pattern>/oauth2callback/Youtube</url-pattern>
	</servlet-mapping>
    <!-- YoutubeCommentThread - create -->
    <servlet>
        <servlet-name>YoutubeCommentThreadNewController</servlet-name>
        <servlet-class>aiss.controller.YoutubeCommentNewController</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>YoutubeCommentThreadNewController</servlet-name>
        <url-pattern>/youtubeCommentNew</url-pattern>
    </servlet-mapping>
</web-app>